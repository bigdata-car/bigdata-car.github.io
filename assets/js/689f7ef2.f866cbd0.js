"use strict";(self.webpackChunkfirst_trial=self.webpackChunkfirst_trial||[]).push([[8840],{8149:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"lecture/Day01-Class02/README","title":"1. Write and Magic","description":"- Write arguments to the app","source":"@site/manual/lecture/Day01-Class02/README.md","sourceDirName":"lecture/Day01-Class02","slug":"/lecture/Day01-Class02/","permalink":"/manual/lecture/Day01-Class02/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/manual/lecture/Day01-Class02/README.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Day01-Class02","permalink":"/manual/category/day01-class02"},"next":{"title":"Day02-Class01","permalink":"/manual/category/day02-class01"}}');var s=t(4848),l=t(8453);const i={sidebar_position:1},r="1. Write and Magic",d={},o=[{value:"1.1 write(string)",id:"11-writestring",level:2},{value:"1.2 write_stream(string)",id:"12-write_streamstring",level:2},{value:"2.1 Markdown",id:"21-markdown",level:2},{value:"2.2 Title",id:"22-title",level:2},{value:"2.3 Header",id:"23-header",level:2},{value:"2.4 Caption",id:"24-caption",level:2},{value:"2.5 Code block",id:"25-code-block",level:2},{value:"3.1 Dataframes",id:"31-dataframes",level:2},{value:"3.2 Metrics",id:"32-metrics",level:2},{value:"4.1 Simple area charts",id:"41-simple-area-charts",level:2},{value:"4.2 Simple line charts",id:"42-simple-line-charts",level:2},{value:"4.3 Matplotlib",id:"43-matplotlib",level:2},{value:"5.1 Button",id:"51-button",level:2},{value:"5.2 Download button",id:"52-download-button",level:2},{value:"5.4 Slider",id:"54-slider",level:2},{value:"5.5 File uploader",id:"55-file-uploader",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"1-write-and-magic",children:"1. Write and Magic"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Write arguments to the app"}),"\n",(0,s.jsx)(n.li,{children:"Multiple arguments\ub97c \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 \ub2e4\uc591\ud55c \ud45c\ud604 \uac00\ub2a5"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"11-writestring",children:"1.1 write(string)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\n\nst.write(\"Hello. *World!* : sunglasses:')\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/bigdata-car/kadap-lecture/assets/105857557/aefc4194-2169-42f3-b510-b74c56e5f57b",alt:"image"})}),"\n",(0,s.jsx)(n.h2,{id:"12-write_streamstring",children:"1.2 write_stream(string)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\n\nstring = "KADaP Cloud\ub294 \uc790\ub3d9\ucc28 \ub370\uc774\ud130 \ubd84\uc11d\uacfc \uae30\uc220 \uac1c\ubc1c\uc5d0 \ud544\uc694\ud55c IT \uc778\ud504\ub77c\ub97c \uac00\uc0c1\ud654 \uae30\uc220\uc744 \ud65c\uc6a9\ud558\uc5ec \ub300\uc5ec\ud574 \uc8fc\ub294 \uc11c\ube44\uc2a4\uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\ub294 \uc6d0\ud558\ub294 \uc0ac\uc591\uc758 \uc11c\ubc84\ub97c \uc9c1\uc811 \uc0dd\uc131\ud558\uac70\ub098 \uc81c\uacf5\ub418\ub294 \uc2dc\ubbac\ub808\uc774\uc158, \ubd84\uc11d, \uac1c\ubc1c \ud658\uacbd\uc5d0 \uc811\uc18d\ud558\uc5ec \ubc14\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."\n\ndef stream_data():\n    for word in string.split(" "):\n        yield word + " "\n        time.sleep(0.1)\n\nst.write_stream(stream_data)\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/bigdata-car/kadap-lecture/assets/153149491/c2e4d9f1-cb89-438e-8661-7678b4aebed2",alt:"ezgif com-crop"})}),"\n",(0,s.jsx)(n.h1,{id:"2-text-elements",children:"2. Text elements"}),"\n",(0,s.jsx)(n.h2,{id:"21-markdown",children:"2.1 Markdown"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\n\nst.markdown(\"*Streamlit* is **really** ***cool***.\")\nst.markdown('''\n    :red[Streamlit] :orange[can] :green[write] :blue[text] :violet[in]\n    :gray[pretty] :rainbow[colors] and :blue-background[highlight] text.''')\nst.markdown(\"Here's a bouquet &mdash;\\\n            :tulip::cherry_blossom::rose::hibiscus::sunflower::blossom:\")\n\nmulti = '''If you end a line with two spaces,\na soft return is used for the next line.\n\nTwo (or more) newline characters in a row will result in a hard return.\n'''\nst.markdown(multi)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://doc-markdown.streamlit.app/?utm_medium=oembed&",children:"https://doc-markdown.streamlit.app/?utm_medium=oembed&"})}),"\n",(0,s.jsx)(n.h2,{id:"22-title",children:"2.2 Title"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\n\nst.title('This is a title')\nst.title('_Streamlit_ is :blue[cool] :sunglasses:')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"23-header",children:"2.3 Header"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\n\nst.header('This is a header with a divider', divider='rainbow')\nst.header('_Streamlit_ is :blue[cool] :sunglasses:')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"24-caption",children:"2.4 Caption"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\n\nst.caption('This is a string that explains something above.')\nst.caption('A caption with _italics_ :blue[colors] and emojis :sunglasses:')\n"})}),"\n",(0,s.jsx)(n.h2,{id:"25-code-block",children:"2.5 Code block"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\n\ncode = '''def hello():\n    print(\"Hello, Streamlit!\")'''\nst.code(code, language='python')\n"})}),"\n",(0,s.jsx)(n.h1,{id:"3-data-elements",children:"3. Data elements"}),"\n",(0,s.jsx)(n.h2,{id:"31-dataframes",children:"3.1 Dataframes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame(np.random.randn(50, 20), columns=("col %d" % i for i in range(20)))\n\nst.dataframe(df)  # Same as st.write(df)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"32-metrics",children:"3.2 Metrics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\n\ncol1, col2, col3 = st.columns(3)\ncol1.metric("Temperature", "70 \xb0F", "1.2 \xb0F")\ncol2.metric("Wind", "9 mph", "-8%")\ncol3.metric("Humidity", "86%", "4%")\n'})}),"\n",(0,s.jsx)(n.h1,{id:"4-chart-elements",children:"4. Chart elements"}),"\n",(0,s.jsx)(n.h2,{id:"41-simple-area-charts",children:"4.1 Simple area charts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\nimport pandas as pd\nimport numpy as np\n\nchart_data = pd.DataFrame(np.random.randn(20, 3), columns=["a", "b", "c"])\n\nst.area_chart(chart_data)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"42-simple-line-charts",children:"4.2 Simple line charts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\nimport pandas as pd\nimport numpy as np\n\nchart_data = pd.DataFrame(np.random.randn(20, 3), columns=["a", "b", "c"])\n\nst.line_chart(chart_data)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"43-matplotlib",children:"4.3 Matplotlib"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import streamlit as st\nimport matplotlib.pyplot as plt\nimport numpy as np\n\narr = np.random.normal(1, 1, size=100)\nfig, ax = plt.subplots()\nax.hist(arr, bins=20)\n\nst.pyplot(fig)\n"})}),"\n",(0,s.jsx)(n.h1,{id:"5-input-widgets",children:"5. Input widgets"}),"\n",(0,s.jsx)(n.h2,{id:"51-button",children:"5.1 Button"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\n\nst.button("Reset", type="primary")\nif st.button("Say hello"):\n    st.write("Why hello there")\nelse:\n    st.write("Goodbye")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"52-download-button",children:"5.2 Download button"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\n\nwith open("flower.png", "rb") as file:\n    btn = st.download_button(\n            label="Download image",\n            data=file,\n            file_name="flower.png",\n            mime="image/png"\n          )\n'})}),"\n",(0,s.jsx)(n.h2,{id:"54-slider",children:"5.4 Slider"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\n\nage = st.slider("How old are you?", 0, 130, 25)\nst.write("I\'m ", age, "years old")\n'})}),"\n",(0,s.jsx)(n.h2,{id:"55-file-uploader",children:"5.5 File uploader"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import streamlit as st\n\nuploaded_files = st.file_uploader("Choose a CSV file", accept_multiple_files=True)\nfor uploaded_file in uploaded_files:\n    bytes_data = uploaded_file.read()\n    st.write("filename:", uploaded_file.name)\n    st.write(bytes_data)\n'})})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var a=t(6540);const s={},l=a.createContext(s);function i(e){const n=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);